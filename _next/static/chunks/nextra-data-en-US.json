{"/":{"title":"简介","data":{"":"欢迎阅读 Next.js 文档！","什么是-nextjs#什么是 Next.js?":"Next.js 是一个用于构建全栈 web 应用的 React 框架。你可以使用 React 组件来构建用户界面，使用 Next.js 获得更多的功能和优化。在底层，Next.js 还抽象并自动配置了 React 所需的工具链，如打包、编译等。这使你可以专注于构建应用程序，而不需要花时间在配置上。无论你是个人开发者还是大型团队的一员，Next.js 都能帮助你构建交互式、动态和快速的 React 应用程序。","主要特性#主要特性":"Next.js 的一些主要特性包括：\n特性\t描述\t路由\t基于文件系统的路由，且建立在 Server Components 之上，支持布局、嵌套路由、加载状态、错误处理等功能\t渲染\t使用 Client 和 Server Components 进行客户端和服务器端渲染，通过 Next.js 在服务端的静态和动态渲然进一步优化。在 Edge 和 Node.js 运行时支持 Streaming.\t数据获取\t在 Server Components 中使用 async/await 简化了数据获取方式，以及扩展的 fetch API 用于请求缓存、数据缓存和重新验证。\t样式\t支持你选择样式方案，包括 CSS Modules，Tailwind CSS，和 CSS-in-JS。\t优化\tImage，Fonts 和 Script 优化以改善应用的 Core Web Vitals 和用户体验。\tTypeScript\t改进了对 TypeScript 的支持，包括更好的类型检查和更高效的编译，以及自定义 TypeScript 插件和类型检查器。","如何使用文档#如何使用文档":"在屏幕左侧，你会看到文档导航栏。文档页面按从基础到高级的顺序排列，因此你可以在构建应用程序时逐步阅读。不过，你也可以按照任何顺序阅读文档，或跳到适用于你的使用案例的页面。在屏幕右侧，你会看到一个目录，可以更方便地在页面各部分之间进行导航。如果需要快速查找页面，可以使用顶部的搜索栏或搜索快捷键（Ctrl+K 或 Cmd+K）。要开始使用，请查看 安装指南。","app-router-vs-pages-router#App Router vs Pages Router":"Next.js 有两种不同的路由: App Router 和 Pages Router。 App Router 是一种较新的路由，允许你使用 React 的最新功能，如 Server Components 和 Streaming。Pages Router 是最初的 Next.js 路由器, 允许你构建服务器渲染的 React 应用程序，并继续支持旧的 Next.js 应用程序.在侧边栏的顶部，你会发现一个下拉菜单，允许你在 App Router 和 Pages Router 之间切换。由于每个目录都有独特的功能，因此跟踪选择了哪个选项卡非常重要。页面顶部的面包屑也将指示你正在查看 App Router 文档还是 Pages Router 文档。","必备知识#必备知识":"虽然我们的文档旨在为初学者提供方便，但我们需要建立一个基准，以便文档能始终专注于 Next.js 功能。我们将确保在引入新概念时提供相关文档的链接。要充分利用我们的文档，建议你对 HTML、CSS 和 React 有基本的了解。如果你需要补习 React 技能，请查看我们的 Next.js 基础课程，它将为你介绍基础知识。","无障碍#无障碍":"为了在阅读文档时使用屏幕阅读器获得最佳辅助功能，我们建议使用 Firefox 和 NVDA，或 Safari 和 VoiceOver。","加入我们的社区#加入我们的社区":"如果您对Next.js有任何疑问，欢迎随时在 GitHub Discussions，Discord，Twitter 和 Reddit 上提问."}}}
(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[227],{5845:function(e,t,s){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/pages",function(){return s(8970)}])},8970:function(e,t,s){"use strict";s.r(t),s.d(t,{__toc:function(){return a}});var n=s(1527),o=s(7178),r=s(2783);let a=[];function c(e){let t=Object.assign({p:"p",a:"a"},(0,r.a)(),e.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t.p,{children:["在 Next.js 13 之前，Pages Router 是在 Next.js 中创建路由的主要方式。它使用文件系统路由器将每个文件映射到路由。Pages Router 在较新版本的 Next.js 中仍然支持，但我们建议迁移到新的 ",(0,n.jsx)(t.a,{href:"/docs/app",children:"App Router"})," 以使用 React 的最新特性。"]}),"\n",(0,n.jsx)(t.p,{children:"对于使用 Pages Router 的现有应用程序，请使用文档的此部分。"})]})}t.default=(0,o.j)({MDXContent:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:t}=Object.assign({},(0,r.a)(),e.components);return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(c,{...e})}):c(e)},pageOpts:{filePath:"pages/docs/pages/index.mdx",route:"/docs/pages",frontMatter:{title:"Pages Router",description:"在 Next.js 13 之前，Pages Router 是在 Next.js 中基于文件系统创建路由的主要方式。"},timestamp:1693824457e3,title:"Pages Router",headings:a},pageNextRoute:"/docs/pages"})}},function(e){e.O(0,[178,774,888,179],function(){return e(e.s=5845)}),_N_E=e.O()}]);